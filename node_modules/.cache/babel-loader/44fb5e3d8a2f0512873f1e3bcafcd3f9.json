{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\src\\\\components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Data from '../data.json';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIdChange = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.handleMathsChange = event => {\n      this.setState({\n        maths: event.target.value\n      });\n    };\n\n    this.handlePhysicsChange = event => {\n      this.setState({\n        physics: event.target.value\n      });\n    };\n\n    this.handleChemistryChange = event => {\n      this.setState({\n        chemistry: event.target.value\n      });\n    };\n\n    this.handleBiologyChange = event => {\n      this.setState({\n        biology: event.target.value\n      });\n    };\n\n    this.handleEnglishChange = event => {\n      this.setState({\n        english: event.target.value\n      });\n    };\n\n    this.getData = event => {\n      let newState = {\n        maths: '',\n        physics: '',\n        chemistry: '',\n        biology: '',\n        english: ''\n      };\n      let id = this.state.id;\n      Object.keys(Data).forEach(function (key) {\n        if (Data[key]['id'] == id) newState = Data[key];\n      });\n      this.setState(newState);\n      TotalPercentage = (newState.maths + this.state.physics + this.state.chemistry + this.state.biology + this.state.english) / 5;\n      console.log(TotalPercentage);\n      this.percentage = 20;\n    };\n\n    this.state = {\n      id: '',\n      maths: '',\n      physics: '',\n      chemistry: '',\n      biology: '',\n      english: ''\n    };\n    this.percentage = 0;\n  }\n\n  calculatePercentage() {\n    console.log('call');\n    console.log(this.state);\n    let TotalPercentage = 0;\n    TotalPercentage = (this.state.maths + this.state.physics + this.state.chemistry + this.state.biology + this.state.english) / 5;\n    console.log(TotalPercentage); //this.setState({percentage: 20});\n\n    this.percentage = 20;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Calculate the percentage level of a Person's mark\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.id,\n      onChange: this.handleIdChange,\n      placeholder: \"Student ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }\n    }, \"Get Data From Server\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Subject Percentage\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.maths,\n      onChange: this.handleMathsChange,\n      placeholder: \"maths%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.physics,\n      onChange: this.handlePhysicsChange,\n      placeholder: \"physics%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.chemistry,\n      onChange: this.handleChemistryChange,\n      placeholder: \"chemistry%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.biology,\n      onChange: this.handleBiologyChange,\n      placeholder: \"biology%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.english,\n      onChange: this.handleEnglishChange,\n      placeholder: \"english%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Total Percentage\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"React Bootstrap Progress Bar Demo\"), /*#__PURE__*/React.createElement(ProgressBar, {\n      now: this.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["E:/react/src/components/Form.js"],"names":["React","Component","ProgressBar","Data","Form","constructor","props","handleIdChange","event","setState","id","target","value","handleMathsChange","maths","handlePhysicsChange","physics","handleChemistryChange","chemistry","handleBiologyChange","biology","handleEnglishChange","english","getData","newState","state","Object","keys","forEach","key","TotalPercentage","console","log","percentage","calculatePercentage","render"],"mappings":"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","sourcesContent":["import  React,{ Component } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Data from '../data.json';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id:'',\r\n            maths: '',\r\n            physics: '',\r\n            chemistry: '',\r\n            biology: '',\r\n            english: ''\r\n        }\r\n        this.percentage = 0;\r\n    }\r\n\r\n    handleIdChange = (event) => {\r\n        this.setState({\r\n            id: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMathsChange = (event) => {\r\n        this.setState({\r\n            maths: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePhysicsChange = (event) => {\r\n        this.setState({\r\n            physics: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChemistryChange = (event) => {\r\n        this.setState({\r\n            chemistry: event.target.value\r\n        })\r\n    }\r\n\r\n    handleBiologyChange = (event) => {\r\n        this.setState({\r\n            biology: event.target.value\r\n        })\r\n    }\r\n\r\n    handleEnglishChange = (event) => {\r\n        this.setState({\r\n            english: event.target.value\r\n        })\r\n    }\r\n\r\n    getData = (event) =>  {\r\n        let newState = {maths: '', physics: '', chemistry: '', biology: '', english: ''};\r\n        let id = this.state.id;\r\n\r\n        Object.keys(Data).forEach(function(key) {\r\n            if (Data[key]['id'] == id)\r\n                newState = Data[key];\r\n        });\r\n        this.setState(newState);\r\n        TotalPercentage = (newState.maths + this.state.physics + this.state.chemistry + this.state.biology + this.state.english) /5;\r\n        console.log(TotalPercentage);\r\n        this.percentage = 20;\r\n    }\r\n\r\n    calculatePercentage() {\r\n        console.log('call');\r\n        console.log(this.state);\r\n        let TotalPercentage = 0;\r\n\r\n        TotalPercentage = (this.state.maths + this.state.physics + this.state.chemistry + this.state.biology + this.state.english) /5;\r\n        console.log(TotalPercentage);\r\n        //this.setState({percentage: 20});\r\n        this.percentage = 20;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div>\r\n                    <label>Calculate the percentage level of a Person's mark</label>\r\n                </div>\r\n                <div>\r\n                   <input type='text' value={this.state.id} onChange={this.handleIdChange} placeholder='Student ID'/>\r\n                </div>\r\n                <div>\r\n                   <button type='button' onClick={this.getData}>Get Data From Server</button>\r\n                </div>\r\n                <div>\r\n                    <label>Subject Percentage</label>\r\n                </div>\r\n                <div>\r\n                   <input type='text' value={this.state.maths} onChange={this.handleMathsChange} placeholder='maths%'/>\r\n                </div>\r\n                <div>\r\n                   <input type='text' value={this.state.physics} onChange={this.handlePhysicsChange} placeholder='physics%'/>\r\n                </div>\r\n                <div>\r\n                   <input type='text' value={this.state.chemistry} onChange={this.handleChemistryChange} placeholder='chemistry%'/>\r\n                </div>\r\n                <div>\r\n                   <input type='text' value={this.state.biology} onChange={this.handleBiologyChange} placeholder='biology%'/>\r\n                </div>\r\n                <div>\r\n                   <input type='text' value={this.state.english} onChange={this.handleEnglishChange} placeholder='english%'/>\r\n                </div>\r\n                <div>\r\n                    <label>Total Percentage</label>\r\n                </div>\r\n                <div className=\"progressBar\">\r\n                    <h3>React Bootstrap Progress Bar Demo</h3>\r\n\r\n                    <ProgressBar now={this.percentage} />\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}