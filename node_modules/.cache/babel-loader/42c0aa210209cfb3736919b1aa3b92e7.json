{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\src\\\\components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Data from '../data.json';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIdChange = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.handleMathsChange = event => {\n      this.setState({\n        maths: event.target.value\n      });\n    };\n\n    this.handlePhysicsChange = event => {\n      this.setState({\n        physics: event.target.value\n      });\n    };\n\n    this.handleChemistryChange = event => {\n      this.setState({\n        chemistry: event.target.value\n      });\n    };\n\n    this.handleBiologyChange = event => {\n      this.setState({\n        biology: event.target.value\n      });\n    };\n\n    this.handleEnglishChange = event => {\n      this.setState({\n        english: event.target.value\n      });\n    };\n\n    this.getData = event => {\n      let newState = {\n        maths: '',\n        physics: '',\n        chemistry: '',\n        biology: '',\n        english: ''\n      };\n      let id = this.state.id;\n      Object.keys(Data).forEach(function (key) {\n        if (Data[key]['id'] == id) newState = Data[key];\n      });\n      this.setState(newState);\n      this.totalPercentage = (newState.maths + newState.physics + newState.chemistry + newState.biology + newState.english) / 5;\n\n      if (this.totalPercentage >= 90) {\n        this.message = 'success';\n        this.status = 'Success';\n      } else if (this.totalPercentage >= 70 && this.totalPercentage < 90) {\n        this.message = 'info';\n        this.status = 'Average';\n      } else if (this.totalPercentage > 30 && this.totalPercentage < 70) {\n        this.message = 'warning';\n        this.status = 'Pass';\n      } else if (this.totalPercentage <= 30) {\n        this.message = 'danger';\n        this.status = 'Fail';\n      }\n    };\n\n    this.state = {\n      id: '',\n      maths: '',\n      physics: '',\n      chemistry: '',\n      biology: '',\n      english: ''\n    };\n    this.totalPercentage = 0;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signup-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"name-input\",\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"email-input\",\n      type: \"text\",\n      placeholder: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-button\",\n      value: \"submit\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"submit\"))) // <form>\n    //     <div>\n    //         <label>Calculate the percentage level of a Person's mark</label>\n    //     </div>\n    //     <div>\n    //        <input type='text' value={this.state.id} onChange={this.handleIdChange} placeholder='Student ID'/>\n    //     </div>\n    //     <div>\n    //        <button type='button' onClick={this.getData}>Get Data From Server</button>\n    //     </div>\n    //     <div>\n    //         <label>Subject Percentage</label>\n    //     </div>\n    //     <div>\n    //        <input type='text' value={this.state.maths} onChange={this.handleMathsChange} placeholder='maths%'/>\n    //     </div>\n    //     <div>\n    //        <input type='text'  value={this.state.physics} onChange={this.handlePhysicsChange} placeholder='physics%'/>\n    //     </div>\n    //     <div>\n    //        <input type='text' value={this.state.chemistry} onChange={this.handleChemistryChange} placeholder='chemistry%'/>\n    //     </div>\n    //     <div>\n    //        <input type='text' value={this.state.biology} onChange={this.handleBiologyChange} placeholder='biology%'/>\n    //     </div>\n    //     <div>\n    //        <input type='text' value={this.state.english} onChange={this.handleEnglishChange} placeholder='english%'/>\n    //     </div>\n    //     <div>\n    //         <label>Total Percentage</label>\n    //     </div>\n    //     <div className=\"progressBar\">\n    //         <ProgressBar striped variant={this.message} now={this.totalPercentage} label={`${this.totalPercentage}% Complete(${this.status})`}/>\n    //     </div>\n    // </form>\n    ;\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["E:/react/src/components/Form.js"],"names":["React","Component","ProgressBar","Data","Form","constructor","props","handleIdChange","event","setState","id","target","value","handleMathsChange","maths","handlePhysicsChange","physics","handleChemistryChange","chemistry","handleBiologyChange","biology","handleEnglishChange","english","getData","newState","state","Object","keys","forEach","key","totalPercentage","message","status","render"],"mappings":"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","sourcesContent":["import  React,{ Component } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Data from '../data.json';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id:'',\r\n            maths: '',\r\n            physics: '',\r\n            chemistry: '',\r\n            biology: '',\r\n            english: ''\r\n        }\r\n        this.totalPercentage = 0;\r\n    }\r\n\r\n    handleIdChange = (event) => {\r\n        this.setState({\r\n            id: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMathsChange = (event) => {\r\n        this.setState({\r\n            maths: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePhysicsChange = (event) => {\r\n        this.setState({\r\n            physics: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChemistryChange = (event) => {\r\n        this.setState({\r\n            chemistry: event.target.value\r\n        })\r\n    }\r\n\r\n    handleBiologyChange = (event) => {\r\n        this.setState({\r\n            biology: event.target.value\r\n        })\r\n    }\r\n\r\n    handleEnglishChange = (event) => {\r\n        this.setState({\r\n            english: event.target.value\r\n        })\r\n    }\r\n\r\n    getData = (event) =>  {\r\n        let newState = {maths: '', physics: '', chemistry: '', biology: '', english: ''};\r\n        let id = this.state.id;\r\n\r\n        Object.keys(Data).forEach(function(key) {\r\n            if (Data[key]['id'] == id)\r\n                newState = Data[key];\r\n        });\r\n        this.setState(newState);\r\n        this.totalPercentage = (newState.maths + newState.physics + newState.chemistry + newState.biology + newState.english) /5;\r\n\r\n        if (this.totalPercentage >= 90) {\r\n            this.message = 'success';\r\n            this.status = 'Success';\r\n        }\r\n        else if (this.totalPercentage >= 70 && this.totalPercentage < 90) {\r\n            this.message = 'info';\r\n            this.status = 'Average';\r\n        }\r\n        else if (this.totalPercentage > 30 && this.totalPercentage < 70) {\r\n            this.message = 'warning';\r\n            this.status = 'Pass';\r\n        }\r\n        else if (this.totalPercentage <= 30) {\r\n            this.message = 'danger';\r\n            this.status = 'Fail';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n            <form className=\"signup-form\">\r\n                <input className=\"name-input\" type=\"text\" placeholder=\"name\" name=\"name\"/>\r\n                <input className=\"email-input\" type=\"text\" placeholder=\"email\" name=\"email\" />\r\n                <button className=\"submit-button\" value=\"submit\" type=\"submit\">submit</button>\r\n            </form>\r\n        </div>\r\n            // <form>\r\n            //     <div>\r\n            //         <label>Calculate the percentage level of a Person's mark</label>\r\n            //     </div>\r\n            //     <div>\r\n            //        <input type='text' value={this.state.id} onChange={this.handleIdChange} placeholder='Student ID'/>\r\n            //     </div>\r\n            //     <div>\r\n            //        <button type='button' onClick={this.getData}>Get Data From Server</button>\r\n            //     </div>\r\n            //     <div>\r\n            //         <label>Subject Percentage</label>\r\n            //     </div>\r\n            //     <div>\r\n            //        <input type='text' value={this.state.maths} onChange={this.handleMathsChange} placeholder='maths%'/>\r\n            //     </div>\r\n            //     <div>\r\n            //        <input type='text'  value={this.state.physics} onChange={this.handlePhysicsChange} placeholder='physics%'/>\r\n            //     </div>\r\n            //     <div>\r\n            //        <input type='text' value={this.state.chemistry} onChange={this.handleChemistryChange} placeholder='chemistry%'/>\r\n            //     </div>\r\n            //     <div>\r\n            //        <input type='text' value={this.state.biology} onChange={this.handleBiologyChange} placeholder='biology%'/>\r\n            //     </div>\r\n            //     <div>\r\n            //        <input type='text' value={this.state.english} onChange={this.handleEnglishChange} placeholder='english%'/>\r\n            //     </div>\r\n            //     <div>\r\n            //         <label>Total Percentage</label>\r\n            //     </div>\r\n            //     <div className=\"progressBar\">\r\n            //         <ProgressBar striped variant={this.message} now={this.totalPercentage} label={`${this.totalPercentage}% Complete(${this.status})`}/>\r\n            //     </div>\r\n            // </form>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}